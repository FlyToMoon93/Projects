{"ast":null,"code":"import React,{useState}from'react';import{Typography,Box,Paper,Divider,Avatar,Accordion,AccordionSummary,AccordionDetails,Grid}from'@mui/material';import{Flag,Info,ExpandMore}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InfoPanel=_ref=>{let{data}=_ref;const affectedCountries=Array.from(new Set(data.map(route=>route.country_name)));const[expandedCountries,setExpandedCountries]=useState(false);const[expandedInfo,setExpandedInfo]=useState(false);const handleCountriesChange=()=>{setExpandedCountries(prev=>!prev);};const handleInfoChange=()=>{setExpandedInfo(prev=>!prev);};return/*#__PURE__*/_jsxs(Paper,{elevation:10,sx:{padding:3,borderRadius:'16px',background:'#f2f2f2',boxShadow:'0 4px 20px rgba(0, 0, 0, 0.2)'},children:[/*#__PURE__*/_jsxs(Accordion,{expanded:expandedCountries,onChange:handleCountriesChange,sx:{mb:2},children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMore,{}),\"aria-controls\":\"countries-content\",id:\"countries-header\",children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'#4caf50',mr:1},children:/*#__PURE__*/_jsx(Flag,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",fontWeight:\"bold\",color:\"text.primary\",children:\"Betroffene L\\xE4nder\"})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:affectedCountries.length>0?affectedCountries.map((country,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{padding:2,borderRadius:'8px',backgroundColor:'#e1f5fe',textAlign:'center'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.primary\",children:country})})},index)):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'#666'},children:\"Keine betroffenen L\\xE4nder\"})})})]}),/*#__PURE__*/_jsx(Divider,{sx:{mb:2}}),/*#__PURE__*/_jsxs(Accordion,{expanded:expandedInfo,onChange:handleInfoChange,children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMore,{}),\"aria-controls\":\"info-content\",id:\"info-header\",children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'#2196f3',mr:1},children:/*#__PURE__*/_jsx(Info,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",fontWeight:\"bold\",color:\"text.primary\",children:\"Zus\\xE4tzliche Informationen\"})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:data.length>0&&data.map((route,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{padding:2,borderRadius:'8px',backgroundColor:'#e1f5fe',textAlign:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.primary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Prefix:\"}),\" \",route.ip]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.primary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Stadt:\"}),\" \",route.city_name]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.primary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Bundesstaat:\"}),\" \",route.state_name]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.primary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Koordinaten:\"}),\" \",route.latitude,\", \",route.longitude]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.primary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Score:\"}),\" \",route.score]})]})},index))})})]})]});};export default InfoPanel;","map":{"version":3,"names":["React","useState","Typography","Box","Paper","Divider","Avatar","Accordion","AccordionSummary","AccordionDetails","Grid","Flag","Info","ExpandMore","jsx","_jsx","jsxs","_jsxs","InfoPanel","_ref","data","affectedCountries","Array","from","Set","map","route","country_name","expandedCountries","setExpandedCountries","expandedInfo","setExpandedInfo","handleCountriesChange","prev","handleInfoChange","elevation","sx","padding","borderRadius","background","boxShadow","children","expanded","onChange","mb","expandIcon","id","display","alignItems","bgcolor","mr","variant","fontWeight","color","container","spacing","length","country","index","item","xs","sm","md","backgroundColor","textAlign","ip","city_name","state_name","latitude","longitude","score"],"sources":["D:/Java/Projects/bgp-visualization/bgp-frontend/src/components/InfoPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography, Box, Paper, Divider, Avatar, Accordion, AccordionSummary, AccordionDetails, Grid } from '@mui/material';\r\nimport { Flag, Info, ExpandMore } from '@mui/icons-material';\r\nimport {Route1} from '../types/route';\r\n\r\ninterface InfoPanelProps {\r\n    data: Route1[];\r\n}\r\n\r\nconst InfoPanel: React.FC<InfoPanelProps> = ({ data }) => {\r\n    const affectedCountries = Array.from(new Set(data.map(route => route.country_name)));\r\n    const [expandedCountries, setExpandedCountries] = useState(false);\r\n    const [expandedInfo, setExpandedInfo] = useState(false);\r\n\r\n    const handleCountriesChange = () => {\r\n        setExpandedCountries(prev => !prev);\r\n    };\r\n\r\n    const handleInfoChange = () => {\r\n        setExpandedInfo(prev => !prev);\r\n    };\r\n\r\n    return (\r\n        <Paper\r\n            elevation={10}\r\n            sx={{\r\n                padding: 3,\r\n                borderRadius: '16px',\r\n                background: '#f2f2f2',\r\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\r\n            }}\r\n        >\r\n            {/* Affected Countries Accordion */}\r\n            <Accordion expanded={expandedCountries} onChange={handleCountriesChange} sx={{ mb: 2 }}>\r\n                <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"countries-content\" id=\"countries-header\">\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                        <Avatar sx={{ bgcolor: '#4caf50', mr: 1 }}>\r\n                            <Flag />\r\n                        </Avatar>\r\n                        <Typography variant=\"h5\" fontWeight=\"bold\" color=\"text.primary\">\r\n                            Betroffene Länder\r\n                        </Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container spacing={2}>\r\n                        {affectedCountries.length > 0 ? (\r\n                            affectedCountries.map((country, index) => (\r\n                                <Grid item xs={12} sm={6} md={4} key={index}>\r\n                                    <Paper\r\n                                        elevation={3}\r\n                                        sx={{\r\n                                            padding: 2,\r\n                                            borderRadius: '8px',\r\n                                            backgroundColor: '#e1f5fe',\r\n                                            textAlign: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <Typography variant=\"body1\" color=\"text.primary\">\r\n                                            {country}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))\r\n                        ) : (\r\n                            <Typography variant=\"body2\" sx={{ color: '#666' }}>\r\n                                Keine betroffenen Länder\r\n                            </Typography>\r\n                        )}\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Divider sx={{ mb: 2 }} />\r\n\r\n            {/* Additional Information Accordion */}\r\n            <Accordion expanded={expandedInfo} onChange={handleInfoChange}>\r\n                <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"info-content\" id=\"info-header\">\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                        <Avatar sx={{ bgcolor: '#2196f3', mr: 1 }}>\r\n                            <Info />\r\n                        </Avatar>\r\n                        <Typography variant=\"h5\" fontWeight=\"bold\" color=\"text.primary\">\r\n                            Zusätzliche Informationen\r\n                        </Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container spacing={2}>\r\n                        {data.length > 0 && (\r\n                            data.map((route, index) => (\r\n                                <Grid item xs={12} sm={6} md={4} key={index}>\r\n                                    <Paper\r\n                                        elevation={3}\r\n                                        sx={{\r\n                                            padding: 2,\r\n                                            borderRadius: '8px',\r\n                                            backgroundColor: '#e1f5fe',\r\n                                            textAlign: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <Typography variant=\"body2\" color=\"text.primary\">\r\n                                            <strong>Prefix:</strong> {route.ip}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.primary\">\r\n                                            <strong>Stadt:</strong> {route.city_name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.primary\">\r\n                                            <strong>Bundesstaat:</strong> {route.state_name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.primary\">\r\n                                            <strong>Koordinaten:</strong> {route.latitude}, {route.longitude}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.primary\">\r\n                                            <strong>Score:</strong> {route.score}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))\r\n                        )}\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default InfoPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}