{"ast":null,"code":"import React,{useEffect,useState}from'react';import useSocket from'./hooks/useSocket';// Hook für die Socket-Verbindung\nimport BGPRoutesContainer from\"./components/BGPRoutesContainer\";import Header from\"./components/Header\";import CityList from\"./components/CityList\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BGPRoutenVisualisierung=()=>{const[routes,setRoutes]=useState([]);const[isFetching,setIsFetching]=useState(false);const socketRoute=useSocket();// Hole die Routen vom Backend per Socket\nconst recentAnomalies=routes.filter(route=>route.anomaly).slice(0,5);const[routes1,setRoutes1]=useState([]);const socketRoutes=[{prefix:'1.1.0.0/24',next_hop:'172.17.179.104',timestamp:'2024-10-19 15:41:06',anomaly:false},{prefix:'1.1.0.0/25',next_hop:'172.17.179.104',timestamp:'2024-10-19 15:41:06',anomaly:false},{prefix:'173.209.104.0/21',next_hop:'80.81.192.172',timestamp:'2024-10-19 15:41:06',anomaly:true},{prefix:'2402:ab00::/32',next_hop:'2001:7f8::950e:0:1',timestamp:'2024-10-19 15:41:06',anomaly:false},{prefix:'2a10:c5c1:bdae::/48',next_hop:'2001:7f8::7156:0:1',timestamp:'2024-10-19 15:41:06',anomaly:false},{prefix:'185.190.148.0/23',next_hop:'80.81.194.174',timestamp:'2024-10-19 15:41:06',anomaly:false},{prefix:'185.190.150.0/24',next_hop:'80.81.194.174',timestamp:'2024-10-19 15:41:06',anomaly:false},{prefix:'2001:43f8:d60::/48',next_hop:'2001:7f8::1b1b:0:1',timestamp:'2024-10-19 15:41:06',anomaly:true}];useEffect(()=>{if(isFetching&&socketRoute.routes.length>0){// Setze die Routen aus dem Socket in den State\nsetRoutes(socketRoutes);setRoutes1(socketRoute.routes);}},[socketRoutes,isFetching]);const handleStopFetching=()=>setIsFetching(false);const handleStartFetching=()=>setIsFetching(true);const totalRoutes=routes.length;const totalAnomalies=routes.filter(route=>route.anomaly).length;const lastUpdated=new Date().toLocaleString();// Funktion zum Abrufen von Anomalien basierend auf einem Zeitrahmen\nconst handleFetchAnomalies=timeRange=>{// Logik zum Abrufen der Anomalien\nconsole.log(`Fetching anomalies for time range: ${timeRange}`);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{totalRoutes:totalRoutes,totalAnomalies:totalAnomalies,lastUpdated:lastUpdated,onStop:handleStopFetching,onStart:handleStartFetching,isFetching:isFetching,recentAnomalies:recentAnomalies// Die neue Prop hinzufügen\n,onFetchAnomalies:handleFetchAnomalies// Die neue Funktion hinzufügen\n,affectedCountries:routes1.map(value=>value.country_name)// Beispiel für betroffene Länder\n}),/*#__PURE__*/_jsx(BGPRoutesContainer,{routes:routes}),/*#__PURE__*/_jsx(CityList,{routes:routes1})]});};export default BGPRoutenVisualisierung;","map":{"version":3,"names":["React","useEffect","useState","useSocket","BGPRoutesContainer","Header","CityList","jsx","_jsx","jsxs","_jsxs","BGPRoutenVisualisierung","routes","setRoutes","isFetching","setIsFetching","socketRoute","recentAnomalies","filter","route","anomaly","slice","routes1","setRoutes1","socketRoutes","prefix","next_hop","timestamp","length","handleStopFetching","handleStartFetching","totalRoutes","totalAnomalies","lastUpdated","Date","toLocaleString","handleFetchAnomalies","timeRange","console","log","children","onStop","onStart","onFetchAnomalies","affectedCountries","map","value","country_name"],"sources":["D:/Java/Projects/bgp-visualization/bgp-frontend/src/BGPRoutenVisualisierung.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useSocket from './hooks/useSocket';  // Hook für die Socket-Verbindung\nimport BGPRoutesContainer from \"./components/BGPRoutesContainer\";\nimport Header from \"./components/Header\";\nimport {Route, Route1} from \"./types/route\";\nimport CityList from \"./components/CityList\";\nimport {index} from \"d3\";\n\nconst BGPRoutenVisualisierung: React.FC = () => {\n    const [routes, setRoutes] = useState<Route[]>([]);\n    const [isFetching, setIsFetching] = useState(false);\n    const socketRoute = useSocket();  // Hole die Routen vom Backend per Socket\n    const recentAnomalies = routes.filter(route => route.anomaly).slice(0, 5);\n    const [routes1, setRoutes1] = useState<Route1[]>([]);\n\n    const socketRoutes = [\n        { prefix: '1.1.0.0/24', next_hop: '172.17.179.104', timestamp: '2024-10-19 15:41:06', anomaly: false },\n        { prefix: '1.1.0.0/25', next_hop: '172.17.179.104', timestamp: '2024-10-19 15:41:06', anomaly: false },\n        { prefix: '173.209.104.0/21', next_hop: '80.81.192.172', timestamp: '2024-10-19 15:41:06', anomaly: true },\n        { prefix: '2402:ab00::/32', next_hop: '2001:7f8::950e:0:1', timestamp: '2024-10-19 15:41:06', anomaly: false },\n        { prefix: '2a10:c5c1:bdae::/48', next_hop: '2001:7f8::7156:0:1', timestamp: '2024-10-19 15:41:06', anomaly: false },\n        { prefix: '185.190.148.0/23', next_hop: '80.81.194.174', timestamp: '2024-10-19 15:41:06', anomaly: false },\n        { prefix: '185.190.150.0/24', next_hop: '80.81.194.174', timestamp: '2024-10-19 15:41:06', anomaly: false },\n        { prefix: '2001:43f8:d60::/48', next_hop: '2001:7f8::1b1b:0:1', timestamp: '2024-10-19 15:41:06', anomaly: true }\n    ];\n\n    useEffect(() => {\n        if (isFetching && socketRoute.routes.length > 0) {\n            // Setze die Routen aus dem Socket in den State\n            setRoutes(socketRoutes);\n            setRoutes1(socketRoute.routes)\n        }\n    }, [socketRoutes, isFetching]);\n\n    const handleStopFetching = () => setIsFetching(false);\n    const handleStartFetching = () => setIsFetching(true);\n\n    const totalRoutes = routes.length;\n    const totalAnomalies = routes.filter(route => route.anomaly).length;\n    const lastUpdated = new Date().toLocaleString();\n// Funktion zum Abrufen von Anomalien basierend auf einem Zeitrahmen\n    const handleFetchAnomalies = (timeRange: string) => {\n        // Logik zum Abrufen der Anomalien\n        console.log(`Fetching anomalies for time range: ${timeRange}`);\n    };\n    return (\n        <div>\n            <Header\n                totalRoutes={totalRoutes}\n                totalAnomalies={totalAnomalies}\n                lastUpdated={lastUpdated}\n                onStop={handleStopFetching}\n                onStart={handleStartFetching}\n                isFetching={isFetching}\n                recentAnomalies={recentAnomalies} // Die neue Prop hinzufügen\n                onFetchAnomalies={handleFetchAnomalies} // Die neue Funktion hinzufügen\n                affectedCountries={routes1.map(value => value.country_name)} // Beispiel für betroffene Länder\n\n\n            />\n            <BGPRoutesContainer routes={routes} />\n            <CityList routes={routes1}/>\n\n        </div>\n    );\n};\n\nexport default BGPRoutenVisualisierung;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}